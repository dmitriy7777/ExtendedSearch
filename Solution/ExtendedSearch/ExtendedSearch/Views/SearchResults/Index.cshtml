@model PagedList.IPagedList<ExtendedSearch.Models.SearchViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

	@{
		ViewBag.Title = "Search Results";
	}

	@section featured
{
		<section class="featured">
			<div class="content-wrapper">
				<hgroup class="title">
					<h1>@ViewBag.Title.</h1>
				</hgroup>
			</div>
		</section>
	}
						   	<h2>Engines</h2>


						   	@using (Html.BeginForm("Index", "SearchResults", FormMethod.Get))
							{
						   	<p>
						   		Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
						   <input type="submit" value="Search" />
						   </p>
							}
						   <table class="table">
						   	<tr>
						   		<th>
						   			@Html.ActionLink("Search for", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
						   </th>
						   <th>
						   	Engine
						   </th>
						   <th>
						   </th>
						   <th></th>
						   </tr>


						   @foreach (var item in Model)
						   {
						   	<tr>
						   		<td>
						   			@Html.DisplayFor(modelItem => item.SearchFor)
						   </td>
						   <td>
						   	@Html.DisplayFor(modelItem => item.EngineName)
						   </td>
						   <td>
						   	@Html.ActionLink("Details", "Details", new { id = item.Id })
						   </td>

						   </tr>
						   }

						   </table>
						   <br />
						   Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

						   @Html.PagedListPager(Model, page => Url.Action("Index",
	new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

